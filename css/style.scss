@charset "utf-8";

/* 
  1) map은 어디에 써먹어요? = 홈페이지에서 개발자도구를 열면 scss의 어디에서 저걸 작성했는지 알려줌
  2) 이제 css는 손 안 댈거임!!!!! scss로 작업한 css는 모두 scss로 작업할거에요
  3) scss로 작업한 css를 css파일에서 수정해도 되나여?
     = 되긴 하는디 scss로 수정하면 그거 다 덮힘 (= 아무 의미없는 짓거리)

*/

/* variable(변수) */
//이거는 scss 기준 사용임(일반 css는 :root)
$img: url('../images/img-logo.png') no-repeat;
$main_color01: #e26d5d;
$main_color02: #5d9fca;


/* base */
body{background: url('../images/bg.jpg') no-repeat #182d40; background-size: 100% auto;}
.img{background: $img;  text-indent: -999999px;} // 변수 호출(= css의 var(--어쩌고))
a{color: inherit; text-decoration: none; display: inline-block;}
  //inherit = 부모와 동일하게
.font{font-family: "Just Another Hand"; text-transform: uppercase;
      letter-spacing: -0.02em;}
.arrow::after{content: ""; display: inline-block; width: 10px; height: 17px;
  background: $img 0 -727px; margin-left: 10px;}


/* header */
header{position: fixed; bottom: 0; left: 0; z-index: 100;
       width: 100%; height: 130px;
       background: #fff; box-shadow: 0 -1px rgba(0, 0, 0, 0.1);

      .title{position: absolute; top: 35px; left: 204px;
        width: 173px; height: 60px;
        background-position: 0 -453px; // x축 y축임. -(마이너스) 값 사용 가능
        /* 
           통짜 이미지 사용할 때는 (1)내가 사용하려는 부분의 이미지의 너비/ 높이 와
           (2)이미지 시작점 기준 너비/ 높이(또는 왼쪽 위에 시작점 좌표)를 포토샵으로 확인할 것
           (1)은 width/height 값으로, (2)는 background-position 값으로 사용
        */}

      .emblem{position: absolute; top: -70px; left: 15px; width: 176px; height: 196px;}
      .menu_btn{position: absolute; top: 0; right: 0; z-index: 1;
        width: 50px; height: 46px; background: #67a6ce;
        border-left: 1px solid #3b87b7; box-shadow: inset 1px 0 #95afd3;
        transition: all 0.3s; display: none;  
        &:hover{background: #79afd3;}
        &::after{
          content: ""; display: block;
          width: 26px; height: 3px; margin: 16px 0 0 12px;
          border-top: 9px double #fff; border-bottom: 3px solid #fff;}
      }
}//end: header


/* .sns */
.sns{
  float: right;
  padding: 28px 11px 11px;
  border-left: 1px solid #ddd;
  
  li{display: inline-block;}
  a{width: 24px; height: 24px;}
  .fb{background-position: 0 -609px;}
  .fb:hover{background-position: 0 -633px;}
  .tw{background-position: 0 -561px;}
  .tw:hover{background-position: 0 -585px;}
  .rss{background-position: 0 -513px;}
  .rss:hover{background-position: 0 -537px;}
}


/* gnb */
#gnb{
  float: right; font-size: 22px; line-height: 40px;

  li{float: left; padding: 22px 11px 0; border-left: 1px solid #ddd;}
  a{color: #5e5e5e; transition: all 0.3s ease-in-out; border-bottom: 2px solid #fff;}
  li:hover a{color: $main_color01; border-bottom: 2px solid $main_color01;}
  a::before{color: $main_color01;}

  .sub{
    position: absolute; bottom: 110px; margin-left: -11px;
    opacity: 0; visibility: hidden; transition: all 0.4s;

    li{float: none; border: 0; background-color: #fff; margin-bottom: 1px;
       padding: 7px 14px 3px;}
    li:first-child{border-radius: 3px 3px 0 0;}
    a{border: 0;} 
  }
  
  li:hover .sub{opacity: 1; visibility: visible; bottom: 130px;}
}


/* .counter */
.counter{
  ul{counter-reset: menu;} //내가 menu라는 카운터를 생성함
  li{counter-increment: menu;} //li마다 menu 카운터를 1씩 늘림
  li a::before{content: "0"counter(menu)" ";}
  li li a::before{content: counters(menu,".")" ";} //"." -> 구분기호
}


/* #language */
#language{
  position: absolute; right: 0; bottom: 0;
  background-color: $main_color01;
  font: 14px/46px "Arial"; font-weight: bold; color: #eea79e;
  padding: 0 20px; border-radius: 2px 0 0;

  li{display: inline-block;}
  li::after{content: " / "; padding: 0 2px;}
  li:last-child::after{display: none;}
  a{color: #fff; border-bottom: 1px solid transparent; //transparent = 투명색
    transition: all 0.2s ease-in-out; display: inline; padding-bottom:  2px;}
  a:hover,
  a.active{border-color: #fff;}
}

/* #main_view */
#main_view{
  width: 100%; height: 100vh; overflow: hidden; position: relative;
  //스크립트 작업할 때, 기존에 연결부에서 가져다 쓰던 css 파일을 가져오지 않고 내가 직접 스크립트 작업을 할거면
  //overflow: hidden, display: flex, flex-shrink: 0 같은건 본인이 직접 설정해줘야됨

  .slider{
    display: flex;
    .view{width: 100%; height: 100vh; flex-shrink: 0;
          position: relative;
          //flex-shrink: 0; = flex item은 부모의 넓이/높이에 맞게 변형되는데 이거 설정하면
          //                  변형 없이 원래 사이즈 유지함
          background: no-repeat center center; background-size: cover;}
    .view01{background-image: url('../images/slide-1.jpg');}
    .view02{background-image: url('../images/slide-2.jpg');}
    .view03{background-image: url('../images/slide-3.jpg');}

    h3,a{position: absolute; right: 0; color: #fff;
         transform: translateX(100%); transition: all 0.3s ease-in-out;}
    h3{font-size: 60px; bottom: 200px; padding: 12px 10px 4px;
       background: rgba(0, 0, 0, 0.7);}
    a{font-size: 26px; bottom: 150px; padding: 8px 6px 4px;
      background-color: $main_color01;}
    .view.active{
      h3{transform: translateX(0); transition-delay: 0.3s;}
      a{transform: translateX(0); transition-delay: 0.5s;}
    }
  }

  .pager{
    position: absolute; top: 70px; right: 20px; z-index: 90;

    span{display: inline-block; margin-left: 4px;
      width: 16px; height: 16px; border-radius: 50%;
      background: #000000aa; position: relative;
      box-shadow: 0 1px 1px #ffffff66,
                  0 1px 1px #00000088 inset;}
    span.active::before{content: ""; position: absolute;
      width: 10px; height: 10px; border-radius: 50%;
      top: 3px; left: 3px; background: $main_color01;}
  }
  .navi{
    position: absolute; top: 20px; left: 6px; z-index: 60;
    display: none;

    a{display: inline-block; width: 40px; height: 39px;
      background: rgba(0, 0, 0, 0.7); transition: all 0.3s;
      cursor: pointer;}
    a:hover{background: $main_color01;}
    i{display: block; width: 10px; height: 17px; margin: 11px 0 0 15px;}
    .prev i{background-position: 0 -745px;}
    .next i{background-position: 0 -727px;}
  }
}

/* notice */
#notice{
  position: fixed; top: 0; left: 0; z-index: 90;
  width: 100%;height: 46px;
  background: #fff; box-shadow: 0 1px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  &::after{ // ::after만 붙으면 자식에 after가 생김, notice에 바로 붙게 하려면 앞에 & 붙으면 됨
    content: "";
    position: absolute; top: 0; right: 0;
    width: 200px; height: 46px;
    background: linear-gradient(-90deg, #fff, transparent);
  }

  h2{background: $main_color02; color: #fff; height: 46px; line-height: 46px;
     padding: 0 11px; font-size: 22px; float: left;}
  ul{width: 150%;}
  li{float: left; border-right: 1px solid #ccc; padding: 0 14px;
    a{font-family: "Helvetica","Arial"; font-size: 14px; color: #5e5e5e;
      line-height: 20px; padding: 13px 0; transition: all 0.2s;}
    a:hover{color: $main_color02;}
    span{color: #bbb; padding-left: 5px;}
  }
}

footer{
  display: none; background: url('../images/pattern3.png') #182d40;
  font-family: "Helvetica", "Arial"; font-size: 3vw; color: #fff;
  line-height: 2em; text-align: center;
  padding: 22px 6%;
  .sns{float: none; border: 0;}
  address{margin-top: 20px;}
}

/* #main_menu */
#main_menu{
  display: none;

  a{background: $main_color01; color: #fff; font-size: 22px;
  display: block; padding: 16px 6% 12px;
  border-top: 1px solid #ea9488; border-bottom: 1px solid #da4632;
  // 이런식으로 border-top, bottom 값을 다르게 주면 튀어나와보이는 양감을 주게 됨
  transition: all 0.3s;}
  a:hover{background: #e47566;}
  .sub a{padding-left: 12%;}
  a::after{float: right;}
}

/* Device-width : 0 ~ 1200px */
@media (max-width: 1200px){
  header .sns{position: absolute; bottom: 0; right: 200px; border: 0;}

}

/* Device-width : 0 ~ 1024px (Tablet) */
@media (max-width: 1024px){
  header{
    .title{left: 25px;}
    .emblem{display: none;}
  }

}

/* Device-width : 0 ~ 768px (Mobile) */
@media (max-width: 768px){
  // header
  header{
    position: relative;
    height: 120px; padding-top: 46px;
    box-shadow: 0 1px rgba(0, 0, 0, 0.1);
    .title{width: 148px; height: 50px;
           top: 81px; left: 6%;
           background-position: 0 -657px;}
    .emblem{display: inline-block; width: 132px; height: 146px;
      background-position: 0 -196px; top: 35px; right: 6%; left: auto;
      z-index: 1;}
    .menu_btn{display: inline-block;}

    #gnb{display: none;}
    .sns{display: none;}

    #language{top: 0; bottom: auto; width: 94%; padding: 0 0 0 6%;
      background: $main_color02; color: #95c1d6; border-radius: 0;}
  }

  //main
  #main_view{
    height: 350px;
    .slider{
      .view{height: 350px;}
      .view01{background-image: url('../images/slide-1-640x360.jpg');}
      .view02{background-image: url('../images/slide-2-640x360.jpg');}
      .view03{background-image: url('../images/slide-3-640x360.jpg');}
      h3{font-size: 32px; bottom: 60px;}
      a{bottom: 15px;}
    }
    .pager{display: none;}
    .navi{display: block;}
  }

  #notice{
    position: relative;
    height: auto;
    &::after{display: none;}

    h2{width: 100%;
      transform: rotate(-90deg) translateX(-100%);
      transform-origin: left top; text-align: right;
      }
    h2::after{display: none;}
    ul{width: 100%; float: left; margin-top: -46px;}
    li{float: none; margin-left: 46px; border-right: 0; border-bottom: 1px solid #ccc;}
  }

  #main_menu{display: block;}

  footer{display: block;}

} // end Mobile